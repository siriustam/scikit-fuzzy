[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=61.2",
]

[project]
name = "scikit-fuzzy"
dynamic = ["version"]
description = "Fuzzy logic toolkit for SciPy"
readme = {file = "README.md", content-type = "text/markdown"}
license = {text = "Modified BSD"}
maintainers = [{name = "Joshua Warner", email = "joshua.dale.warner@gmail.com"}]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: BSD License",
  "Operating System :: MacOS",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Operating System :: Unix",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Scientific/Engineering",
]
dependencies = [
  "matplotlib>=3.1",
  "networkx>=1.9",
  "numpy>=1.6",
  "scipy>=0.9",
]

[project.urls]
Download = "https://github.com/scikit-fuzzy/scikit-fuzzy"
Homepage = "https://pypi.python.org/pypi/scikit-fuzzy"

[tool.setuptools]
include-package-data = true
license-files = ["LICENSE.txt"]
zip-safe = false

[tool.setuptools.dynamic]
version = {attr = "skfuzzy.__version__"}

[tool.setuptools.packages.find]
exclude = ["docs"]
namespaces = false

[tool.setuptools.package-data]
mkpkg = [
    "*.md",
    "*.npy",
    "*.txt",
]

[tool.ruff]
select = [
  "C9",     # McCabe cyclomatic complexity
  "E",      # pycodestyle errors
  "F",      # Pyflakes
  "W",      # pycodestyle warnings
]
line-length = 126
target-version = "py38"

[tool.ruff.mccabe]
max-complexity = 35

[tool.ruff.per-file-ignores]
"docs/ext/docscrape_sphinx.py" = ["E401"]
"docs/ext/docscrape.py" = ["E701", "E741"]
"docs/ext/numpydoc.py" = ["E401", "E402", "E701"]
"docs/ext/plot2rst.py" = ["E402"]
"docs/source/conf.py" = ["E402"]
"docs/tools/plot_pr.py" = ["E741"]

[tool.pytest.ini_options]
addopts = "-s --maxfail=1 --failed-first --color=yes"
filterwarnings = ["ignore::_pytest.warning_types.PytestUnknownMarkWarning"]
norecursedirs = [".mypy_cache"]
python_files = ["test_*.py"]

[tool.pytest-watch]
ext = ".csv,.jinja2,.json,.py,.yaml,.yml"
